name: Truck-based release workflow

on:
  push:
    tags:
      - '*' # "Tag format: semantic version with -appflow or -binary postfix."
    # branches:
    #   - main
    #   - master
    #   - 'release/**'  # Assuming release branches follow a pattern like 'release/{version}'

jobs:
  create-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Extract tag name
        id: extract-tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          RELEASE_VERSION="${TAG_NAME%%-*}"
          RELEASE_TYPE="${TAG_NAME#*-}"

          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "RELEASE_TYPE=$RELEASE_TYPE" >> $GITHUB_ENV

          if [[ "$TAG_NAME" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-appflow|-binary)$ ]]; then
          echo "Tag has a valid semantic version with -appflow or -binary postfix."
          exit 0
          else
            echo "Error: Tag does not have a valid semantic version with -appflow or -binary postfix."
            exit 1
          fi

      - name: Get Tag Author
        id: tag_author
        run: |
          
          TAG_AUTHOR_NAME=$(git log -1 --pretty=format:'%an' ${{ github.ref }})
          TAG_AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae' ${{ github.ref }})
        
          echo "TAG_AUTHOR_NAME=$TAG_AUTHOR_NAME" >> $GITHUB_ENV
          echo "TAG_AUTHOR_EMAIL=$TAG_AUTHOR_EMAIL" >> $GITHUB_ENV

      - name: Set Git Author Info
        run: |
          git config user.name $TAG_AUTHOR_NAME
          git config user.email $TAG_AUTHOR_EMAIL

      - name: Create branch
        run: git checkout -b release/$RELEASE_VERSION $TAG_NAME

      - name: Update package.json and  package-lock.json 
        run: |

          sed -i "/<!-- version placeholder -->/a ## $RELEASE_VERSION - $RELEASE_TYPE" VERSION.md

          sed -i "s/\"version\": \".*\"/\"version\": \"$RELEASE_VERSION\"/g" package.json
          sed -i "s/\"version\": \".*\"/\"version\": \"$RELEASE_VERSION\"/g" package-lock.json
          sed -i "s/version=\"[^\"]*\"/version=\"$RELEASE_VERSION\"/" config.xml
         
          
          git add VERSION.md package.json package-lock.json config.xml
          git commit -m "Update version to $RELEASE_VERSION"

      - name: Push branch to remote
        run: git push origin release/$RELEASE_VERSION

